defaults:
  run:
    working-directory: ./crates/deadpool
env:
  RUST_BACKTRACE: 1
jobs:
  check-deadpool:
    name: Check deadpool
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo
          toolchain: stable
      - run: cargo check --no-default-features --features ${{ matrix.feature1 }},${{ matrix.feature2 }}
    strategy:
      fail-fast: false
      matrix:
        feature1:
          - managed
          - unmanaged
        feature2:
          - rt_tokio_1
          - rt_async-std_1
          - serde
  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo,clippy
          toolchain: stable
      - run: cargo clippy --no-deps --all-features -- -D warnings
  msrv:
    name: MSRV
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo
          toolchain: nightly
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo
          toolchain: "1.80"
      - run: ../../tools/cargo-update-minimal-versions.sh 1.80
      - run: cargo check --all-features
  rustdoc:
    name: Doc
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo
          toolchain: stable
      - run: cargo doc --no-deps --all-features
  rustfmt:
    name: rustfmt
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo,rustfmt
          toolchain: stable
      - run: cargo fmt --check
  test:
    name: Test
    runs-on: ubuntu-latest
    services: {}
    steps:
      - uses: actions/checkout@v5
      - uses: dtolnay/rust-toolchain@v1
        with:
          components: rustc,rust-std,cargo
          toolchain: stable
      - env: {}
        run: cargo test --all-features
name: deadpool
"on":
  pull_request:
    branches:
      - main
    paths:
      - crates/deadpool/**
      - .github/workflows/deadpool.yml
  push:
    branches:
      - main
    paths:
      - crates/deadpool/**
      - .github/workflows/deadpool.yml
    tags:
      - deadpool-v*
